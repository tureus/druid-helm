apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "druid.overlord.fullname" . }}
  labels:
    app: {{ include "druid.name" . }}
    chart: {{ include "druid.chart" . }}
    component: {{ .Values.overlord.name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.overlord.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "druid.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.overlord.name }}
  template:
    metadata:
      labels:
        app: {{ include "druid.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.overlord.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/druid-sh-configmap.yaml") . | sha256sum }}
      {{- with .Values.overlord.podAnnotations }}
{{ toYaml . | indent 8 }}
      {{- end }} 
    spec:
      volumes:
        - name: "druid-sh"
          configMap:
            name: "druid-sh"
            defaultMode: 0777
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "overlord" ]
{{/*          command: ["sleep", "30000"]*/}}
          env:
          {{- if .Values.zookeeper.enabled }}
          - name: ZOOKEEPER
            value: {{ .Release.Name }}-zookeeper-headless:2181
          {{- else }}
          - name: ZOOKEEPER
            value: {{ .Values.zkHosts }}
          {{- end }}
          - name: JAVA_OPTS
            value: {{ .Values.overlord.javaOpts }}
          {{- range $key, $value :=  .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $value :=  .Values.overlord.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          - name: DOWNLOAD_MYSQL
            value: "true"
          volumeMounts:
            - mountPath: "/druid.sh"
              subPath: "druid.sh"
              name: "druid-sh"
          ports:
            - name: http
              containerPort: {{ .Values.overlord.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /status/health
              port: {{ .Values.overlord.port }}
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /status/health
              port: {{ .Values.overlord.port }}
          resources:
{{ toYaml .Values.overlord.resources | indent 12 }}
    {{- with .Values.overlord.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.overlord.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.overlord.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
